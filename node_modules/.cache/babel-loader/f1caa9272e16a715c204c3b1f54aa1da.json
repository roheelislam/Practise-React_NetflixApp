{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nouma\\\\reacttut\\\\awesomeapp\\\\src\\\\SlotMach.jsx\";\nimport React from \"react\";\n\nconst SlotM = props => {\n  //   //   let x = \"@\";\n  //   //   let y = \"@\";\n  //   //   let z = \"@\";\n  let x = props.x;\n  let y = props.y;\n  let z = props.z;\n\n  if (x === y && x === z) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [x, \" \", y, \" \", z]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" This is Matching :) \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [x, \" \", y, \" \", z]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" This is not Matching :( \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_c = SlotM;\nexport default SlotM;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlotM\");","map":{"version":3,"sources":["C:/Users/Nouma/reacttut/awesomeapp/src/SlotMach.jsx"],"names":["React","SlotM","props","x","y","z"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB;AACA;AACA;AACA,MAAIC,CAAC,GAAGD,KAAK,CAACC,CAAd;AACA,MAAIC,CAAC,GAAGF,KAAK,CAACE,CAAd;AACA,MAAIC,CAAC,GAAGH,KAAK,CAACG,CAAd;;AACA,MAAIF,CAAC,KAAKC,CAAN,IAAWD,CAAC,KAAKE,CAArB,EAAwB;AACtB,wBACE;AAAA,8BACE;AAAA,mBACGF,CADH,OACOC,CADP,OACWC,CADX;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA;AAAA;AAAA;AAAA,cALF;AAAA,oBADF;AASD,GAVD,MAUO;AACL,wBACE;AAAA,8BACE;AAAA,mBACGF,CADH,OACOC,CADP,OACWC,CADX;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA;AAAA;AAAA;AAAA,cALF;AAAA,oBADF;AASD;AACF,CA5BD;;KAAMJ,K;AA8BN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst SlotM = (props) => {\r\n  //   //   let x = \"@\";\r\n  //   //   let y = \"@\";\r\n  //   //   let z = \"@\";\r\n  let x = props.x;\r\n  let y = props.y;\r\n  let z = props.z;\r\n  if (x === y && x === z) {\r\n    return (\r\n      <>\r\n        <h1>\r\n          {x} {y} {z}\r\n        </h1>\r\n        <h1> This is Matching :) </h1>\r\n        <hr />\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <h1>\r\n          {x} {y} {z}\r\n        </h1>\r\n        <h1> This is not Matching :( </h1>\r\n        <hr />\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SlotM;\r\n"]},"metadata":{},"sourceType":"module"}