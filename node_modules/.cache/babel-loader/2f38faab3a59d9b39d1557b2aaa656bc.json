{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nouma\\\\reacttut\\\\awesomeapp\\\\src\\\\index.js\";\nimport React from 'react';\nimport { TagCloud } from 'react-tagcloud';\nconst data = [{\n  value: 'jQuery',\n  count: 25\n}, {\n  value: 'MongoDB',\n  count: 18\n}, {\n  value: 'JavaScript',\n  count: 38\n}, {\n  value: 'React',\n  count: 30\n}, {\n  value: 'Nodejs',\n  count: 28\n}, {\n  value: 'Express.js',\n  count: 25\n}, {\n  value: 'HTML5',\n  count: 33\n}, {\n  value: 'CSS3',\n  count: 20\n}, {\n  value: 'Webpack',\n  count: 22\n}, {\n  value: 'Babel.js',\n  count: 7\n}, {\n  value: 'ECMAScript',\n  count: 25\n}, {\n  value: 'Jest',\n  count: 15\n}, {\n  value: 'Mocha',\n  count: 17\n}, {\n  value: 'React Native',\n  count: 27\n}, {\n  value: 'Angular.js',\n  count: 30\n}, {\n  value: 'TypeScript',\n  count: 15\n}, {\n  value: 'Flow',\n  count: 30\n}, {\n  value: 'NPM',\n  count: 11\n}];\n/* CSS:\n.simple-cloud .tag-cloud-tag {\n  cursor: pointer;\n}\n*/\n// minSize, maxSize - font size in px\n// tags - array of objects with properties value and count\n// shuffle - indicates if data should be shuffled (true by default)\n// onClick event handler has `tag` and `event` parameter\n\nexport default (() => /*#__PURE__*/_jsxDEV(TagCloud, {\n  minSize: 12,\n  maxSize: 35,\n  tags: data,\n  className: \"simple-cloud\",\n  onClick: tag => alert(`'${tag.value}' was selected!`)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 3\n}, this));","map":{"version":3,"sources":["C:/Users/Nouma/reacttut/awesomeapp/src/index.js"],"names":["React","TagCloud","data","value","count","tag","alert"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,MAAMC,IAAI,GAAG,CACX;AAAEC,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CADW,EAEX;AAAED,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CAFW,EAGX;AAAED,EAAAA,KAAK,EAAE,YAAT;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAHW,EAIX;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAJW,EAKX;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CALW,EAMX;AAAED,EAAAA,KAAK,EAAE,YAAT;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CANW,EAOX;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAPW,EAQX;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,KAAK,EAAE;AAAxB,CARW,EASX;AAAED,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CATW,EAUX;AAAED,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,KAAK,EAAE;AAA5B,CAVW,EAWX;AAAED,EAAAA,KAAK,EAAE,YAAT;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAXW,EAYX;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,KAAK,EAAE;AAAxB,CAZW,EAaX;AAAED,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAbW,EAcX;AAAED,EAAAA,KAAK,EAAE,cAAT;AAAyBC,EAAAA,KAAK,EAAE;AAAhC,CAdW,EAeX;AAAED,EAAAA,KAAK,EAAE,YAAT;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAfW,EAgBX;AAAED,EAAAA,KAAK,EAAE,YAAT;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAhBW,EAiBX;AAAED,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,KAAK,EAAE;AAAxB,CAjBW,EAkBX;AAAED,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAlBW,CAAb;AAqBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA,gBAAe,mBACb,QAAC,QAAD;AACE,EAAA,OAAO,EAAE,EADX;AAEE,EAAA,OAAO,EAAE,EAFX;AAGE,EAAA,IAAI,EAAEF,IAHR;AAIE,EAAA,SAAS,EAAC,cAJZ;AAKE,EAAA,OAAO,EAAEG,GAAG,IAAIC,KAAK,CAAE,IAAGD,GAAG,CAACF,KAAM,iBAAf;AALvB;AAAA;AAAA;AAAA;AAAA,QADF","sourcesContent":["import React from 'react'\nimport { TagCloud } from 'react-tagcloud'\n\nconst data = [\n  { value: 'jQuery', count: 25 },\n  { value: 'MongoDB', count: 18 },\n  { value: 'JavaScript', count: 38 },\n  { value: 'React', count: 30 },\n  { value: 'Nodejs', count: 28 },\n  { value: 'Express.js', count: 25 },\n  { value: 'HTML5', count: 33 },\n  { value: 'CSS3', count: 20 },\n  { value: 'Webpack', count: 22 },\n  { value: 'Babel.js', count: 7 },\n  { value: 'ECMAScript', count: 25 },\n  { value: 'Jest', count: 15 },\n  { value: 'Mocha', count: 17 },\n  { value: 'React Native', count: 27 },\n  { value: 'Angular.js', count: 30 },\n  { value: 'TypeScript', count: 15 },\n  { value: 'Flow', count: 30 },\n  { value: 'NPM', count: 11 },\n]\n\n/* CSS:\n.simple-cloud .tag-cloud-tag {\n  cursor: pointer;\n}\n*/\n\n// minSize, maxSize - font size in px\n// tags - array of objects with properties value and count\n// shuffle - indicates if data should be shuffled (true by default)\n// onClick event handler has `tag` and `event` parameter\nexport default () => (\n  <TagCloud\n    minSize={12}\n    maxSize={35}\n    tags={data}\n    className=\"simple-cloud\"\n    onClick={tag => alert(`'${tag.value}' was selected!`)}\n  />\n)"]},"metadata":{},"sourceType":"module"}